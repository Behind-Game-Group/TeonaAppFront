name: Expo CI - Development Branch

on:
  push:
    branches:
      - developpement  # Exécute les jobs lors de chaque push sur la branche development
  pull_request:
    branches:
      - developpement  # Exécute également les jobs lors de chaque pull request vers la branche development
  schedule:
    - cron: '0 18 * * *'  # Planifie l'exécution quotidienne à 18h00 (UTC)

jobs:
  check-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Vérification du code et récupération du dépôt
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Mise en cache des modules Node.js pour accélérer les installations futures
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 3. Configuration de Node.js sur la version 20
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Installation des outils nécessaires pour Expo CLI
      - name: Install Expo CLI
        run: npm install -g expo-cli

      # 5. Installation des dépendances du projet
      - name: Install dependencies
        run: npm install

      # 6. Vérification de la qualité du code avec un linter
      - name: Run lint
        run: npm run lint

      # 7. Exécution des tests avec Jest
      - name: Run tests
        run: npm run test

      # 8. Vérification de la couverture de code avec Jest (WIP)

  build:
    runs-on: ubuntu-latest
    needs: check-and-test  # S'exécute uniquement après le succès de 'check-and-test'
    if: github.event_name == 'schedule'  # S'exécute uniquement lors de la planification (fin de journée)

    steps:
      # 1. Vérification du code et récupération du dépôt
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Mise en cache des modules Node.js pour accélérer les installations futures
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 3. Configuration de Node.js sur la version 20
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 4. Installation des outils nécessaires pour Expo CLI et EAS CLI
      - name: Install Expo & EAS CLI
        run: |
          npm install -g expo-cli eas-cli

      # 5. Installation des dépendances du projet
      - name: Install dependencies
        run: npm install

      # 6. Exécution du build avec EAS pour le profil 'preview'
      - name: Build with EAS CLI
        run: eas build --profile preview --non-interactive
